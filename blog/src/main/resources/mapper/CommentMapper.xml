<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chauncey.blog.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.chauncey.blog.model.Comment">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="nickname" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="content" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="avatar" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="blog_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="parent_comment_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="admin_comment" javaType="java.lang.Boolean" jdbcType="BIT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, nickname, email, content, avatar, create_time, blog_id, parent_comment_id, admin_comment
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.chauncey.blog.model.Comment">
    insert into t_comment (id, nickname, email, 
      content, avatar, create_time, 
      blog_id, parent_comment_id, admin_comment
      )
    values (#{id,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{blogId,jdbcType=BIGINT}, #{parentCommentId,jdbcType=BIGINT}, #{adminComment,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chauncey.blog.model.Comment">
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="parentCommentId != null">
        parent_comment_id,
      </if>
      <if test="adminComment != null">
        admin_comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="blogId != null">
        #{blogId,jdbcType=BIGINT},
      </if>
      <if test="parentCommentId != null">
        #{parentCommentId,jdbcType=BIGINT},
      </if>
      <if test="adminComment != null">
        #{adminComment,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chauncey.blog.model.CommentExample" resultType="java.lang.Long">
    select count(*) from t_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.chauncey.blog.model.Comment">
    update t_comment
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="blogId != null">
        blog_id = #{blogId,jdbcType=BIGINT},
      </if>
      <if test="parentCommentId != null">
        parent_comment_id = #{parentCommentId,jdbcType=BIGINT},
      </if>
      <if test="adminComment != null">
        admin_comment = #{adminComment,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chauncey.blog.model.Comment">
    update t_comment
    set nickname = #{nickname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      blog_id = #{blogId,jdbcType=BIGINT},
      parent_comment_id = #{parentCommentId,jdbcType=BIGINT},
      admin_comment = #{adminComment,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>